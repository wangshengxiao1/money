<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpn.money.mapper.FinanceAccountMapper">
  <resultMap id="BaseResultMap" type="com.bjpn.money.model.FinanceAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="available_money" jdbcType="DOUBLE" property="availableMoney" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, available_money
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_finance_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from u_finance_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bjpn.money.model.FinanceAccount">
    insert into u_finance_account (id, uid, available_money
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{availableMoney,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjpn.money.model.FinanceAccount">
    insert into u_finance_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="availableMoney != null">
        available_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="availableMoney != null">
        #{availableMoney,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpn.money.model.FinanceAccount">
    update u_finance_account
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="availableMoney != null">
        available_money = #{availableMoney,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpn.money.model.FinanceAccount">
    update u_finance_account
    set uid = #{uid,jdbcType=INTEGER},
      available_money = #{availableMoney,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" resultMap="BaseResultMap">
    select * from u_finance_account where uid = #{id}
  </select>

  <!--减少账户余额-->
  <!--投资：账户余额减少-->
  <update id="updateMoneyReduceForInvest">
      update u_finance_account set available_money=available_money-#{bidMoney} where uid=#{userId} and available_money-#{bidMoney}>=0
  </update>

  <!--向个人账户中存入返现余额-->
  <update id="insertMoneyByBid">
      update u_finance_account set available_money=available_money+#{allMoney} where uid=#{uid}
  </update>
</mapper>